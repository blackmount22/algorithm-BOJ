import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

class Location2206{
	
	int x;
	int y;
	int cnt;
	
	public Location2206(int x, int y, int cnt) {
		this.x = x;
		this.y = y;
		this.cnt = cnt;
	}
}

public class Main {

	static Queue<Location2206> loc;
	
	static int[][] map;
	static int[][] visit;
	static int n;
	static int m;
	
	static int result = -1;
	static int moveCnt = 0;
	static int brkCnt = 0;
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Scanner sc = new Scanner(System.in);
		
		n = sc.nextInt();
		m = sc.nextInt();
		
		map = new int[n][m];
		visit = new int[n][m];
		
		loc = new LinkedList<>();
		
		for(int i=0;i<n;i++) {
			String str = sc.next();
			
			for(int j=0;j<m;j++) {
				map[i][j] = Character.getNumericValue(str.charAt(j));
				visit[i][j] = Integer.MAX_VALUE;
			}
		}
		
		loc.offer(new Location2206(0, 0, 0));
		
		getBFS();
		System.out.println(result);
	}
	
	public static void getBFS() {
		int[] xx = {0, 1, 0, -1};
		int[] yy = {1, 0, -1, 0};		
		
		while(!loc.isEmpty()) {
			moveCnt++;
			
			int locSize = loc.size();
			for(int i=0;i<locSize;i++) {
				
				Location2206 p = loc.poll();
				
				if(p.x == n-1 && p.y == m-1 && p.cnt==1) {
					result = moveCnt;
					return;
				}
				
				for(int j=0;j<4;j++) {
					int ax = p.x + xx[j];
					int ay = p.y + yy[j];
					
					if(ax < 0 || ay< 0 || ax >= n || ay >= m) continue; 
															
					if(visit[ax][ay] <= p.cnt) continue;
					
//					System.out.println("("+ax+","+ay+","+bCnt+") : " + moveCnt );
					
					if(map[ax][ay] == 1) {
						loc.offer(new Location2206(ax, ay, p.cnt+1));
						visit[ax][ay] = p.cnt+1;
					}
					else if(map[ax][ay] == 0) {
						loc.offer(new Location2206(ax, ay, p.cnt));
						visit[ax][ay] = p.cnt;
					}
				}
			}
		}
	}
}
