import java.util.Scanner;


public class BaekjoonAlgo_17086 {

	static int n;
	static int m;
	static int[][] map;
	static int[][] visit;
	static int max = 0;
	static int totalMax = 0; 
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

		Scanner sc = new Scanner(System.in);
		
		n = sc.nextInt();
		m = sc.nextInt();
		
		map = new int[n][m];
		visit = new int[n][m];
		
		for(int i=0;i<n;i++) {
			for(int j=0;j<m;j++) {
				map[i][j] = sc.nextInt();
			}
		}
		
		for(int i=0;i<n;i++) {
			for(int j=0;j<m;j++) {
				max = 0;
				visit = new int[i][j];
				GetBFS(i, j);
			}
		}
		
		//System.out.println(totalMax);
	}
	
	public static void GetBFS(int x, int y) {
		int[] xx = {-1, -1, 0, 1, 1, 1, 0, -1};
		int[] yy = {0, 1, 1, 1, 0, -1, -1, -1};
		
		for(int i=0;i<8;i++) {
			int ax = x+xx[i];
			int ay = y+yy[i];
			
			System.out.println(ax + ","+ay);
			
			if(ax >=0 && ax < n && ay>=0 && ay<m && map[ax][ay] == 1) {
				return;
			}
			
			if(ax >=0 && ax < n && ay>=0 && ay<m && visit[ax][ay] == 0 && map[ax][ay] == 0) {
				System.out.println("!");
				GetBFS(ax, ay);
			}
		}
		
		max++;
		
		Math.max(max, totalMax);
	}

}
